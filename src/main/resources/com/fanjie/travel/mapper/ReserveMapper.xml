<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanjie.travel.mapper.ReserveMapper">
  <resultMap id="BaseResultMap" type="com.fanjie.travel.model.po.Reserve">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="bookdate" jdbcType="VARCHAR" property="bookdate" />
    <result column="sceneid" jdbcType="INTEGER" property="sceneid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, phone, num, bookdate, sceneid
  </sql>
  <select id="selectByExample" parameterType="com.fanjie.travel.model.po.ReserveExample" resultType="com.fanjie.travel.model.dto.ReserveDTO">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultType="com.fanjie.travel.model.dto.ReserveDTO">
    select
    r.id as id,
    r.phone as phone,
    r.num as num,
    r.bookdate as bookdate,
    r.sceneid as sceneid,
    s.name as scenename
    from reserve r left join scene s
    on sceneid = s.id
    and phone = #{phone,jdbcType=VARCHAR}
    ORDER BY r.bookdate desc , r.sceneid
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from reserve
  where id = #{id,jdbcType=INTEGER}
</select>

  <select id="selectAll" resultType="com.fanjie.travel.model.dto.ReserveDTO">
    select
    <include refid="Base_Column_List" />
    from reserve
  </select>

  <select id="selectAllBySelect" parameterType="java.lang.String" resultType="com.fanjie.travel.model.dto.ReserveDTO">
    select
    <include refid="Base_Column_List" />
    from reserve
    where phone like concat(concat('%',#{phone}),'%')
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reserve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fanjie.travel.model.po.ReserveExample">
    delete from reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fanjie.travel.model.vo.ReserveVO">
    insert into reserve (phone, num,
      bookdate, sceneid)
    values (#{phone,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER},
      #{bookdate,jdbcType=VARCHAR}, 0)
  </insert>
  <insert id="insertSelective" parameterType="com.fanjie.travel.model.po.Reserve">
    insert into reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="bookdate != null">
        bookdate,
      </if>
      <if test="sceneid != null">
        sceneid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="bookdate != null">
        #{bookdate,jdbcType=VARCHAR},
      </if>
      <if test="sceneid != null">
        #{sceneid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fanjie.travel.model.po.ReserveExample" resultType="java.lang.Long">
    select count(*) from reserve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reserve
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.bookdate != null">
        bookdate = #{record.bookdate,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneid != null">
        sceneid = #{record.sceneid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reserve
    set id = #{record.id,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      bookdate = #{record.bookdate,jdbcType=VARCHAR},
      sceneid = #{record.sceneid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fanjie.travel.model.vo.ReserveVO">
    update reserve
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="bookdate != null">
        bookdate = #{bookdate,jdbcType=VARCHAR},
      </if>
      <if test="sceneid != null">
        sceneid = #{sceneid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fanjie.travel.model.po.Reserve">
    update reserve
    set phone = #{phone,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      bookdate = #{bookdate,jdbcType=VARCHAR},
      sceneid = #{sceneid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
